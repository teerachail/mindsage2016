@model WebManagementPortal.EF.ExtraContent

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ExtraContent</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(it => it.LessonId)

        <div class="form-group">
            @Html.LabelFor(model => model.Lesson.Unit.Semester.CourseCatalog.SideName, "CourseCatalog", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(Model.Lesson.Unit.Semester.CourseCatalog.SideName, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Lesson.Unit.Semester.CourseCatalog.SideName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lesson.Unit.Semester.Title, "Semester", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(Model.Lesson.Unit.Semester.Title, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Lesson.Unit.Semester.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lesson.Unit.Title, "Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="control-label">@Model.Lesson.Unit.Title</label>
                @Html.ValidationMessageFor(model => model.Lesson.Unit.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lesson.Title, "Lesson", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(it => it.Lesson.Title)
                @Html.Label(Model.Lesson.Title, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Lesson.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <label class="control-label col-md-2">Type</label>
            <div class="col-md-10">
                @Html.DropDownList("IconURL", WebManagementPortal.Controllers.ControllerHelper.GetExtraContentType(Model.IconURL), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IconURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContentURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Details", "Lessons", new { @id = Model.LessonId }, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
