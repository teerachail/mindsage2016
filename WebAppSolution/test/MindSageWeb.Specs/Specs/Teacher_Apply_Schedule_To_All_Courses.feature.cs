// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Teacher_Apply_Schedule_To_All_CoursesFeature : Xunit.IClassFixture<Teacher_Apply_Schedule_To_All_CoursesFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Teacher_Apply_Schedule_To_All_Courses.feature"
#line hidden
        
        public Teacher_Apply_Schedule_To_All_CoursesFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Teacher_Apply_Schedule_To_All_Courses", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
{
	""id"": ""Subscription02"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
    testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""BeginDate"": ""3/1/2016"",
""ExpiredDate"": ""3/10/2016"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""2/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
	""Order"": 1,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""1/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01"",
	""TopicOfTheDays"": [],
            },
            {
                ""Id"": ""LessonCalendar02"",
	""Order"": 2,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson02"",
                ""BeginDate"": ""1/8/2016"",
                ""LessonCatalogId"": ""LessonCatalog02"",
	""TopicOfTheDays"": [],
            }
        ],
""Holidays"": [ ""1/2/2016"", ""1/3/2016"" ],
""ShiftDays"": [ ""1/4/2016"" ]
    },
{
        ""id"": ""ClassCalendar02"",
        ""BeginDate"": ""1/1/2016"",
""ExpiredDate"": ""1/1/2017"",
        ""ClassRoomId"": ""ClassRoom02"",
""CreatedDate"": ""2/1/2017"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar100"",
	""Order"": 1,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""1/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01"",
	""TopicOfTheDays"": [],
            }
        ],
""Holidays"": [],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Teacher_Apply_Schedule_To_All_CoursesFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but have only one course available Th" +
            "en system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButHaveOnlyOneCourseAvailableThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but have only one course available Th" +
                    "en system do nothing", new string[] {
                        "mock"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 90
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 91
 testRunner.And("System have UserProfile collection with JSON format are", "[\r\n{\r\n\"id\": \"teacher@mindsage.com\",\r\n\"Subscriptions\":\r\n[\r\n{\r\n\t\"id\": \"Subscription" +
                    "01\",\r\n\t\"Role\": \"Teacher\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"ClassCalendarId\": \"" +
                    "ClassCalendar01\",\r\n}\r\n]\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
    testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""BeginDate"": ""3/1/2016"",
""ExpiredDate"": ""3/10/2016"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""2/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
	""Order"": 1,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""1/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01"",
	""TopicOfTheDays"": [],
            },
            {
                ""Id"": ""LessonCalendar02"",
	""Order"": 2,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson02"",
                ""BeginDate"": ""1/8/2016"",
                ""LessonCatalogId"": ""LessonCatalog02"",
	""TopicOfTheDays"": [],
            }
        ],
""Holidays"": [ ""1/2/2016"", ""1/3/2016"" ],
""ShiftDays"": [ ""1/4/2016"" ]
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses Then system update schedule to all co" +
            "urses")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesThenSystemUpdateScheduleToAllCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses Then system update schedule to all co" +
                    "urses", new string[] {
                        "mock"});
#line 147
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 148
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 149
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar02"",
       ""BeginDate"": ""3/1/2016"",
	""ExpiredDate"": ""3/5/2016"",
       ""ClassRoomId"": ""ClassRoom02"",
	""CreatedDate"": ""2/1/2017"",
       ""LessonCalendars"":
       [
		{
               ""Id"": ""LessonCalendar100"",
			""Order"": 1,
			""SemesterGroupName"": ""A"",
               ""LessonId"": ""Lesson100"",
               ""BeginDate"": ""1/1/2016"",
               ""LessonCatalogId"": ""LessonCatalog100"",
			""TopicOfTheDays"": [],
           }
       ],
	""Holidays"": [ ""1/2/2016"", ""1/3/2016"" ],
	""ShiftDays"": [ ""1/4/2016"" ]
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but other courses\' role are Student T" +
            "hen system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButOtherCoursesRoleAreStudentThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but other courses\' role are Student T" +
                    "hen system do nothing", new string[] {
                        "mock"});
#line 176
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 177
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 178
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
	""DeletedDate"": ""1/1/2016""
},
{
	""id"": ""Subscription02"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 203
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but other courses\' role are SelfPurch" +
            "aser Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButOtherCoursesRoleAreSelfPurchaserThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but other courses\' role are SelfPurch" +
                    "aser Then system do nothing", new string[] {
                        "mock"});
#line 206
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 207
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 208
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
	""DeletedDate"": ""1/1/2016""
},
{
	""id"": ""Subscription02"",
	""Role"": ""SelfPurchaser"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but those courses were deleted (maste" +
            "r course was deleted) Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButThoseCoursesWereDeletedMasterCourseWasDeletedThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but those courses were deleted (maste" +
                    "r course was deleted) Then system do nothing", new string[] {
                        "mock"});
#line 236
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 237
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 238
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
	""DeletedDate"": ""1/1/2016""
},
{
	""id"": ""Subscription02"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 263
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but those courses were deleted (targe" +
            "t courses was deleted) Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButThoseCoursesWereDeletedTargetCoursesWasDeletedThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but those courses were deleted (targe" +
                    "t courses was deleted) Then system do nothing", new string[] {
                        "mock"});
#line 266
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 267
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 268
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
{
	""id"": ""Subscription02"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
	""DeletedDate"": ""1/1/2016""
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but used incorrect ClassRoom (unknow)" +
            " Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButUsedIncorrectClassRoomUnknowThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but used incorrect ClassRoom (unknow)" +
                    " Then system do nothing", new string[] {
                        "mock"});
#line 296
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 297
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 298
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'UnknowClassRoom0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 299
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but used incorrect ClassRoom (empty) " +
            "Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButUsedIncorrectClassRoomEmptyThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but used incorrect ClassRoom (empty) " +
                    "Then system do nothing", new string[] {
                        "mock"});
#line 302
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 303
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 304
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 305
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but used incorrect ClassRoom (null) T" +
            "hen system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButUsedIncorrectClassRoomNullThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but used incorrect ClassRoom (null) T" +
                    "hen system do nothing", new string[] {
                        "mock"});
#line 308
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 309
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 310
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 311
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "Incorrect user (unknow) apply schedule to all its courses Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserUnknowApplyScheduleToAllItsCoursesThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (unknow) apply schedule to all its courses Then system do nothing", new string[] {
                        "mock"});
#line 314
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 315
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 316
    testRunner.When("UserProfile \'unknow@mindsage.com\' click Apply to all courses button from the Clas" +
                    "sRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 317
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "Incorrect user (empty) apply schedule to all its courses Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserEmptyApplyScheduleToAllItsCoursesThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (empty) apply schedule to all its courses Then system do nothing", new string[] {
                        "mock"});
#line 320
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 321
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 322
    testRunner.When("UserProfile \'\' click Apply to all courses button from the ClassRoomId: \'ClassRoom" +
                    "01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "Incorrect user (null) apply schedule to all its courses Then system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserNullApplyScheduleToAllItsCoursesThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (null) apply schedule to all its courses Then system do nothing", new string[] {
                        "mock"});
#line 326
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 327
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 328
    testRunner.When("UserProfile \'NULL\' click Apply to all courses button from the ClassRoomId: \'Class" +
                    "Room01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 329
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "Incorrect user (Role = student) apply schedule to all its courses Then system do " +
            "nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserRoleStudentApplyScheduleToAllItsCoursesThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (Role = student) apply schedule to all its courses Then system do " +
                    "nothing", new string[] {
                        "mock"});
#line 332
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 333
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 334
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
	""DeletedDate"": ""1/1/2016""
},
{
	""id"": ""Subscription02"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 359
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "Incorrect user (Role = selfpurchaser) apply schedule to all its courses Then syst" +
            "em do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserRoleSelfpurchaserApplyScheduleToAllItsCoursesThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (Role = selfpurchaser) apply schedule to all its courses Then syst" +
                    "em do nothing", new string[] {
                        "mock"});
#line 362
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 363
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 364
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""teacher@mindsage.com"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""SelfPurchaser"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
	""DeletedDate"": ""1/1/2016""
},
{
	""id"": ""Subscription02"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom02"",
	""ClassCalendarId"": ""ClassCalendar02"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 389
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but the ClassRoom was deleted Then sy" +
            "stem do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButTheClassRoomWasDeletedThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but the ClassRoom was deleted Then sy" +
                    "stem do nothing", new string[] {
                        "mock"});
#line 392
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 393
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 394
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""BeginDate"": ""3/1/2016"",
""ExpiredDate"": ""3/10/2016"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""2/1/2016"",
""DeletedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
	""Order"": 1,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""1/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01"",
	""TopicOfTheDays"": [],
            },
            {
                ""Id"": ""LessonCalendar02"",
	""Order"": 2,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson02"",
                ""BeginDate"": ""1/8/2016"",
                ""LessonCatalogId"": ""LessonCatalog02"",
	""TopicOfTheDays"": [],
            }
        ],
""Holidays"": [ ""1/2/2016"", ""1/3/2016"" ],
""ShiftDays"": [ ""1/4/2016"" ]
    },
{
        ""id"": ""ClassCalendar02"",
        ""BeginDate"": ""1/1/2016"",
""ExpiredDate"": ""1/1/2017"",
        ""ClassRoomId"": ""ClassRoom02"",
""CreatedDate"": ""2/1/2017"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar100"",
	""Order"": 1,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""1/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01"",
	""TopicOfTheDays"": [],
            }
        ],
""Holidays"": [],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 452
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Apply_Schedule_To_All_Courses")]
        [Xunit.TraitAttribute("Description", "A teacher apply schedule to all its courses but the ClassRoom doesn\'t existing Th" +
            "en system do nothing")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void ATeacherApplyScheduleToAllItsCoursesButTheClassRoomDoesnTExistingThenSystemDoNothing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A teacher apply schedule to all its courses but the ClassRoom doesn\'t existing Th" +
                    "en system do nothing", new string[] {
                        "mock"});
#line 455
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 456
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 457
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
{
        ""id"": ""ClassCalendar02"",
        ""BeginDate"": ""1/1/2016"",
""ExpiredDate"": ""1/1/2017"",
        ""ClassRoomId"": ""ClassRoom02"",
""CreatedDate"": ""2/1/2017"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar100"",
	""Order"": 1,
	""SemesterGroupName"": ""A"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""1/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01"",
	""TopicOfTheDays"": [],
            }
        ],
""Holidays"": [],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
    testRunner.When("UserProfile \'teacher@mindsage.com\' click Apply to all courses button from the Cla" +
                    "ssRoomId: \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 484
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Teacher_Apply_Schedule_To_All_CoursesFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Teacher_Apply_Schedule_To_All_CoursesFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
