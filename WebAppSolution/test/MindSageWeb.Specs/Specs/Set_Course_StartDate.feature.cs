// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Set_Course_StartDateFeature : Xunit.IClassFixture<Set_Course_StartDateFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Set_Course_StartDate.feature"
#line hidden
        
        public Set_Course_StartDateFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Set_Course_StartDate", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
    testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""sakul@mindsage.com"",
""Name"": ""Sakul jaruthanaset"",
""ImageProfileUrl"": ""ImgURL01"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""student@mindsage.com"",
""Name"": ""Student jaruthanaset"",
""ImageProfileUrl"": ""ImgURL02"",
""Subscriptions"":
[
{
	""id"": ""Subscription02"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""selfpurchase@mindsage.com"",
""Name"": ""Selfpurchase jaruthanaset"",
""ImageProfileUrl"": ""ImgURL03"",
""Subscriptions"":
[
{
	""id"": ""Subscription03"",
	""Role"": ""SelfPurchaser"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": [],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Set_Course_StartDateFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date Then system set ClassCalendar and send the schedule" +
            " back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateThenSystemSetClassCalendarAndSendTheScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date Then system set ClassCalendar and send the schedule" +
                    " back", new string[] {
                        "mock"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 89
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 91
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""2/8/2016"",
	""ExpiredDate"": ""2/17/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/8/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/13/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""2/8/2016"",
	""EndDate"": ""2/17/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""2/8/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""2/13/2016""
		}
	],
	""Holidays"": [],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date to the past date Then system set ClassCalendar and " +
            "send the schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateToThePastDateThenSystemSetClassCalendarAndSendTheScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date to the past date Then system set ClassCalendar and " +
                    "send the schedule back", new string[] {
                        "mock"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 145
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 146
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'1/1/2000\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 147
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2000"",
	""ExpiredDate"": ""1/10/2000"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2000"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2000"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 178
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2000"",
	""EndDate"": ""1/10/2000"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2000"",
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2000"",
		}
	],
	""Holidays"": [],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date to the past date but the start date was setted Then" +
            " system doesn\'t set ClassCalendar and send the schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateToThePastDateButTheStartDateWasSettedThenSystemDoesnTSetClassCalendarAndSendTheScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date to the past date but the start date was setted Then" +
                    " system doesn\'t set ClassCalendar and send the schedule back", new string[] {
                        "mock"});
#line 200
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 201
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 202
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
""BeginDate"": ""1/1/2016"",
""ExpiredDate"": ""1/10/2016"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/6/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": [],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'1/1/2000\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 237
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016"",
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016"",
		}
	],
	""Holidays"": [],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date when schedule have shift days Then system set Class" +
            "Calendar and send the schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateWhenScheduleHaveShiftDaysThenSystemSetClassCalendarAndSendTheScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date when schedule have shift days Then system set Class" +
                    "Calendar and send the schedule back", new string[] {
                        "mock"});
#line 259
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 260
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 261
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/6/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": [],
""ShiftDays"": [ ""1/1/2016"", ""1/2/2016"" ]
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'1/1/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 293
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/12/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/3/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/8/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [],
	""ShiftDays"": [ ""1/1/2016"", ""1/2/2016"" ]
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 324
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/12/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/3/2016"",
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/8/2016"",
		}
	],
	""Holidays"": [],
	""ShiftDays"": [ ""1/1/2016"", ""1/2/2016"" ]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date when schedule have holidays Then system set ClassCa" +
            "lendar and send the schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateWhenScheduleHaveHolidaysThenSystemSetClassCalendarAndSendTheScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date when schedule have holidays Then system set ClassCa" +
                    "lendar and send the schedule back", new string[] {
                        "mock"});
#line 346
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 347
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 348
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/6/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": [ ""1/1/2016"", ""1/2/2016"" ],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'1/1/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 380
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/1/2016"", ""1/2/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 411
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016"",
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016"",
		}
	],
	""Holidays"": [ ""1/1/2016"", ""1/2/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date when schedule have shift days and holidays Then sys" +
            "tem set ClassCalendar and send the schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateWhenScheduleHaveShiftDaysAndHolidaysThenSystemSetClassCalendarAndSendTheScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date when schedule have shift days and holidays Then sys" +
                    "tem set ClassCalendar and send the schedule back", new string[] {
                        "mock"});
#line 433
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 434
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 435
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": [ ""1/1/2016"", ""1/2/2016"" ],
""ShiftDays"": [ ""1/2/2016"", ""1/3/2016"", ""1/5/2016"" ]
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'1/1/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 467
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/13/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/9/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/1/2016"", ""1/2/2016"" ],
	""ShiftDays"": [ ""1/2/2016"", ""1/3/2016"", ""1/5/2016"" ]
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 498
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/13/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016"",
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/9/2016"",
		}
	],
	""Holidays"": [ ""1/1/2016"", ""1/2/2016"" ],
	""ShiftDays"": [ ""1/2/2016"", ""1/3/2016"", ""1/5/2016"" ]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but send incorrect ClassRoom Then system doesn\'t se" +
            "t ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButSendIncorrectClassRoomThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but send incorrect ClassRoom Then system doesn\'t se" +
                    "t ClassCalendar", new string[] {
                        "mock"});
#line 520
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 521
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 522
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Inco" +
                    "rrectClassRoom\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 523
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 524
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but send incorrect ClassRoom (empty) Then system do" +
            "esn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButSendIncorrectClassRoomEmptyThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but send incorrect ClassRoom (empty) Then system do" +
                    "esn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 527
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 528
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 529
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 530
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 531
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but send incorrect ClassRoom (null) Then system doe" +
            "sn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButSendIncorrectClassRoomNullThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but send incorrect ClassRoom (null) Then system doe" +
                    "sn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 534
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 535
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 536
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'NULL" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 537
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 538
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Incorrect user set course start date Then system doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserSetCourseStartDateThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user set course start date Then system doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 541
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 542
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 543
 testRunner.When("User \'unknow@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Inc" +
                    "orrectClassRoom\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 544
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 545
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Incorrect user (empty) set course start date Then system doesn\'t set ClassCalenda" +
            "r")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserEmptySetCourseStartDateThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (empty) set course start date Then system doesn\'t set ClassCalenda" +
                    "r", new string[] {
                        "mock"});
#line 548
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 549
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 550
 testRunner.When("User \'\' set course start date \'2/8/2016\' from ClassRoomId \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 551
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 552
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Incorrect user (null) set course start date Then system doesn\'t set ClassCalendar" +
            "")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserNullSetCourseStartDateThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user (null) set course start date Then system doesn\'t set ClassCalendar" +
                    "", new string[] {
                        "mock"});
#line 555
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 556
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 557
 testRunner.When("User \'NULL\' set course start date \'2/8/2016\' from ClassRoomId \'NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 558
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 559
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Student set course start date Then system doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void StudentSetCourseStartDateThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student set course start date Then system doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 562
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 563
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 564
 testRunner.When("User \'student@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'In" +
                    "correctClassRoom\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 565
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 566
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "SelfPurchase user set course start date Then system doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void SelfPurchaseUserSetCourseStartDateThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SelfPurchase user set course start date Then system doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 569
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 570
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 571
 testRunner.When("User \'selfpurchase@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomI" +
                    "d \'IncorrectClassRoom\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 572
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 573
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but the ClassCalendar doesn\'t existing Then system " +
            "doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButTheClassCalendarDoesnTExistingThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but the ClassCalendar doesn\'t existing Then system " +
                    "doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 576
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 577
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 578
 testRunner.And("System have ClassCalendar collection with JSON format are", "[]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 582
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 583
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 584
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but the ClassCalendar\'s holidays is null Then syste" +
            "m doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButTheClassCalendarSHolidaysIsNullThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but the ClassCalendar\'s holidays is null Then syste" +
                    "m doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 587
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 588
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 589
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 619
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 620
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""2/8/2016"",
	""ExpiredDate"": ""2/17/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/8/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/13/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 651
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""2/8/2016"",
	""EndDate"": ""2/17/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""2/8/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""2/13/2016""
		}
	],
	""Holidays"": [],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but the ClassCalendar\'s shiftdays is null Then syst" +
            "em doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButTheClassCalendarSShiftdaysIsNullThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but the ClassCalendar\'s shiftdays is null Then syst" +
                    "em doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 673
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 674
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 675
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 705
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 706
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""2/8/2016"",
	""ExpiredDate"": ""2/17/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/8/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/13/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 737
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""2/8/2016"",
	""EndDate"": ""2/17/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""2/8/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""2/13/2016""
		}
	],
	""Holidays"": [],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_StartDate")]
        [Xunit.TraitAttribute("Description", "Teacher set course start date but the ClassCalendar\'s shiftdays and holidays are " +
            "null Then system doesn\'t set ClassCalendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetCourseStartDateButTheClassCalendarSShiftdaysAndHolidaysAreNullThenSystemDoesnTSetClassCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set course start date but the ClassCalendar\'s shiftdays and holidays are " +
                    "null Then system doesn\'t set ClassCalendar", new string[] {
                        "mock"});
#line 759
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 760
 testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 761
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ]
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 790
 testRunner.When("User \'sakul@mindsage.com\' set course start date \'2/8/2016\' from ClassRoomId \'Clas" +
                    "sRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 791
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""2/8/2016"",
	""ExpiredDate"": ""2/17/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/8/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""2/13/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 822
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""2/8/2016"",
	""EndDate"": ""2/17/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""2/8/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""2/13/2016""
		}
	],
	""Holidays"": [],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Set_Course_StartDateFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Set_Course_StartDateFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
