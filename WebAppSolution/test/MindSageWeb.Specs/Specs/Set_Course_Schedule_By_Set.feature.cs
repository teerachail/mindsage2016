// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Set_Course_Schedule_By_SetFeature : Xunit.IClassFixture<Set_Course_Schedule_By_SetFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Set_Course_Schedule_By_Set.feature"
#line hidden
        
        public Set_Course_Schedule_By_SetFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Set_Course_Schedule_By_Set", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
    testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""sakul@mindsage.com"",
""Name"": ""Sakul jaruthanaset"",
""ImageProfileUrl"": ""ImgURL01"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""student@mindsage.com"",
""Name"": ""Student jaruthanaset"",
""ImageProfileUrl"": ""ImgURL02"",
""Subscriptions"":
[
{
	""id"": ""Subscription02"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""selfpurchase@mindsage.com"",
""Name"": ""Selfpurchase jaruthanaset"",
""ImageProfileUrl"": ""ImgURL03"",
""Subscriptions"":
[
{
	""id"": ""Subscription03"",
	""Role"": ""SelfPurchaser"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""ClassRoomId"": ""ClassRoom01"",
""CreatedDate"": ""1/1/2016"",
""BeginDate"": ""1/1/2016"",
""ExpiredDate"": ""1/10/2016"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/1/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            },
{
                ""Id"": ""LessonCalendar02"",
                ""Order"": 2,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""1/6/2016"",
	""TopicOfTheDays"": [],
                ""LessonId"": ""Lesson01"",
            }
        ],
""Holidays"": [],
""ShiftDays"": []
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Set_Course_Schedule_By_SetFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all sunday are holiday Then system set course Calendar and send new s" +
            "chedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllSundayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all sunday are holiday Then system set course Calendar and send new s" +
                    "chedule back", new string[] {
                        "mock"});
#line 90
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 91
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 92
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsSunday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 101
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/4/2016"", ""1/11/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/4/2016"", ""1/11/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all monday are holiday Then system set course Calendar and send new s" +
            "chedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllMondayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all monday are holiday Then system set course Calendar and send new s" +
                    "chedule back", new string[] {
                        "mock"});
#line 154
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 155
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 156
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsMonday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 165
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/5/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 196
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/5/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all tuesday are holiday Then system set course Calendar and send new " +
            "schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllTuesdayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all tuesday are holiday Then system set course Calendar and send new " +
                    "schedule back", new string[] {
                        "mock"});
#line 218
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 219
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 220
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsTuesday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 229
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/6/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/6/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all wenesday are holiday Then system set course Calendar and send new" +
            " schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllWenesdayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all wenesday are holiday Then system set course Calendar and send new" +
                    " schedule back", new string[] {
                        "mock"});
#line 282
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 283
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 284
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsWednesday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 293
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/7/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 324
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/7/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all thursday are holiday Then system set course Calendar and send new" +
            " schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllThursdayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all thursday are holiday Then system set course Calendar and send new" +
                    " schedule back", new string[] {
                        "mock"});
#line 346
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 347
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 348
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsThursday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 357
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/1/2016"", ""1/8/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 388
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/1/2016"", ""1/8/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all friday are holiday Then system set course Calendar and send new s" +
            "chedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllFridayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all friday are holiday Then system set course Calendar and send new s" +
                    "chedule back", new string[] {
                        "mock"});
#line 410
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 411
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 412
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsFriday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 421
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/2/2016"", ""1/9/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 452
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/2/2016"", ""1/9/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all saturday are holiday Then system set course Calendar and send new" +
            " schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllSaturdayAreHolidayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all saturday are holiday Then system set course Calendar and send new" +
                    " schedule back", new string[] {
                        "mock"});
#line 474
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 475
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 476
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsSaturday\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 485
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/10/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/3/2016"", ""1/10/2016"" ],
	""ShiftDays"": []
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 516
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/10/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/3/2016"", ""1/10/2016"" ],
	""ShiftDays"": []
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all sunday are holiday and shift day Then system set course Calendar " +
            "and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllSundayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all sunday are holiday and shift day Then system set course Calendar " +
                    "and send new schedule back", new string[] {
                        "mock"});
#line 539
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 540
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 541
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsSunday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 551
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/12/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/7/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/4/2016"", ""1/11/2016"" ],
	""ShiftDays"": [ ""1/4/2016"", ""1/11/2016"" ],
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 582
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/12/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/7/2016""
		}
	],
	""Holidays"": [ ""1/4/2016"", ""1/11/2016"" ],
	""ShiftDays"":[ ""1/4/2016"", ""1/11/2016"" ],
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all monday are holiday and shift day Then system set course Calendar " +
            "and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllMondayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all monday are holiday and shift day Then system set course Calendar " +
                    "and send new schedule back", new string[] {
                        "mock"});
#line 604
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 605
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 606
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsMonday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 616
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/11/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/7/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/5/2016"" ],
	""ShiftDays"": [ ""1/5/2016"" ]
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 647
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/11/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/7/2016""
		}
	],
	""Holidays"": [ ""1/5/2016"" ],
	""ShiftDays"": [ ""1/5/2016"" ]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all tuesday are holiday and shift day Then system set course Calendar" +
            " and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllTuesdayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all tuesday are holiday and shift day Then system set course Calendar" +
                    " and send new schedule back", new string[] {
                        "mock"});
#line 669
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 670
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 671
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsTuesday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 681
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/11/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/7/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/6/2016"" ],
	""ShiftDays"": [ ""1/6/2016"" ],
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 712
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/11/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/7/2016""
		}
	],
	""Holidays"": [ ""1/6/2016"" ],
	""ShiftDays"": [ ""1/6/2016"" ],
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all wenesday are holiday and shift day Then system set course Calenda" +
            "r and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllWenesdayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all wenesday are holiday and shift day Then system set course Calenda" +
                    "r and send new schedule back", new string[] {
                        "mock"});
#line 734
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 735
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 736
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsWednesday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 746
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/11/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/6/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/7/2016"" ],
	""ShiftDays"": [ ""1/7/2016"" ],
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 777
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/11/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/6/2016""
		}
	],
	""Holidays"": [ ""1/7/2016"" ],
	""ShiftDays"": [ ""1/7/2016"" ],
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all thursday are holiday and shift day Then system set course Calenda" +
            "r and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllThursdayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all thursday are holiday and shift day Then system set course Calenda" +
                    "r and send new schedule back", new string[] {
                        "mock"});
#line 799
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 800
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 801
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsThursday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 811
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/12/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/2/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/7/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/1/2016"", ""1/8/2016"" ],
	""ShiftDays"": [ ""1/1/2016"", ""1/8/2016"" ],
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 842
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/12/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/2/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/7/2016""
		}
	],
	""Holidays"": [ ""1/1/2016"", ""1/8/2016"" ],
	""ShiftDays"": [ ""1/1/2016"", ""1/8/2016"" ],
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all friday are holiday and shift day Then system set course Calendar " +
            "and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllFridayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all friday are holiday and shift day Then system set course Calendar " +
                    "and send new schedule back", new string[] {
                        "mock"});
#line 864
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 865
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 866
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsFriday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 876
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/12/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/7/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/2/2016"", ""1/9/2016"" ],
	""ShiftDays"": [ ""1/2/2016"", ""1/9/2016"" ],
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 907
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/12/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/7/2016""
		}
	],
	""Holidays"": [ ""1/2/2016"", ""1/9/2016"" ],
	""ShiftDays"": [ ""1/2/2016"", ""1/9/2016"" ],
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set all saturday are holiday and shift day Then system set course Calenda" +
            "r and send new schedule back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetAllSaturdayAreHolidayAndShiftDayThenSystemSetCourseCalendarAndSendNewScheduleBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set all saturday are holiday and shift day Then system set course Calenda" +
                    "r and send new schedule back", new string[] {
                        "mock"});
#line 929
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 930
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 931
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 941
 testRunner.Then("System set course ClassCalendar collection with JSON format is", @"{
       ""id"": ""ClassCalendar01"",
	""BeginDate"": ""1/1/2016"",
	""ExpiredDate"": ""1/12/2016"",
       ""ClassRoomId"": ""ClassRoom01"",
	""CreatedDate"": ""1/1/2016"",
       ""LessonCalendars"":
       [
           {
               ""Id"": ""LessonCalendar01"",
               ""Order"": 1,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/1/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           },
		{
               ""Id"": ""LessonCalendar02"",
               ""Order"": 2,
               ""SemesterGroupName"": ""A"",
               ""BeginDate"": ""1/7/2016"",
			""TopicOfTheDays"": [],
               ""LessonId"": ""Lesson01"",
           }
       ],
	""Holidays"": [ ""1/3/2016"", ""1/10/2016"" ],
	""ShiftDays"": [ ""1/3/2016"", ""1/10/2016"" ],
   }", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 972
 testRunner.And("System send course schedule with JSON format is", @"{
	""IsComplete"": true,
	""BeginDate"": ""1/1/2016"",
	""EndDate"": ""1/12/2016"",
	""Lessons"": [
		{
			""Name"": ""Lesson 1"",
			""BeginDate"": ""1/1/2016""
		},
		{
			""Name"": ""Lesson 2"",
			""BeginDate"": ""1/7/2016""
		}
	],
	""Holidays"": [ ""1/3/2016"", ""1/10/2016"" ],
	""ShiftDays"": [ ""1/3/2016"", ""1/10/2016"" ],
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set schedule set but using incorrect ClassRoom Then system doesn\'t set co" +
            "urse Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetScheduleSetButUsingIncorrectClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set schedule set but using incorrect ClassRoom Then system doesn\'t set co" +
                    "urse Calendar", new string[] {
                        "mock"});
#line 994
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 995
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 996
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"IncorrectClassRoom\"," +
                    "\r\n\t\"IsHoliday\": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1006
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1007
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set schedule set but using incorrect (empty) ClassRoom Then system doesn\'" +
            "t set course Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetScheduleSetButUsingIncorrectEmptyClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set schedule set but using incorrect (empty) ClassRoom Then system doesn\'" +
                    "t set course Calendar", new string[] {
                        "mock"});
#line 1010
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1011
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1012
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"\",\r\n\t\"IsHoliday\": tr" +
                    "ue,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1022
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1023
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher set schedule set but using incorrect (null) ClassRoom Then system doesn\'t" +
            " set course Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherSetScheduleSetButUsingIncorrectNullClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher set schedule set but using incorrect (null) ClassRoom Then system doesn\'t" +
                    " set course Calendar", new string[] {
                        "mock"});
#line 1026
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1027
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1028
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"NULL\",\r\n\t\"IsHoliday\"" +
                    ": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1038
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1039
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Incorrect (unknow) user set schedule set ClassRoom Then system doesn\'t set course" +
            " Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUnknowUserSetScheduleSetClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect (unknow) user set schedule set ClassRoom Then system doesn\'t set course" +
                    " Calendar", new string[] {
                        "mock"});
#line 1042
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1043
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1044
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"unknow@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"Is" +
                    "Holiday\": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1054
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1055
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Incorrect (empty) user set schedule set ClassRoom Then system doesn\'t set course " +
            "Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectEmptyUserSetScheduleSetClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect (empty) user set schedule set ClassRoom Then system doesn\'t set course " +
                    "Calendar", new string[] {
                        "mock"});
#line 1058
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1059
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1060
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsHoliday\": true,\r\n\t\"" +
                    "IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1070
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1071
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Incorrect (null) user set schedule set ClassRoom Then system doesn\'t set course C" +
            "alendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectNullUserSetScheduleSetClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect (null) user set schedule set ClassRoom Then system doesn\'t set course C" +
                    "alendar", new string[] {
                        "mock"});
#line 1074
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1075
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1076
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"NULL\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsHoliday\": true," +
                    "\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1086
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1087
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Incorrect (role = student) user set schedule set ClassRoom Then system doesn\'t se" +
            "t course Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectRoleStudentUserSetScheduleSetClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect (role = student) user set schedule set ClassRoom Then system doesn\'t se" +
                    "t course Calendar", new string[] {
                        "mock"});
#line 1090
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1091
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1092
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"student@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"I" +
                    "sHoliday\": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1102
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1103
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Incorrect (role = selfpurchase) user set schedule set ClassRoom Then system doesn" +
            "\'t set course Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectRoleSelfpurchaseUserSetScheduleSetClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect (role = selfpurchase) user set schedule set ClassRoom Then system doesn" +
                    "\'t set course Calendar", new string[] {
                        "mock"});
#line 1106
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1107
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1108
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"selfpurchase@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\"," +
                    "\r\n\t\"IsHoliday\": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1118
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1119
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Set_Course_Schedule_By_Set")]
        [Xunit.TraitAttribute("Description", "Teacher user set schedule set but the ClassCalendar doesn\'t existing ClassRoom Th" +
            "en system doesn\'t set course Calendar")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherUserSetScheduleSetButTheClassCalendarDoesnTExistingClassRoomThenSystemDoesnTSetCourseCalendar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher user set schedule set but the ClassCalendar doesn\'t existing ClassRoom Th" +
                    "en system doesn\'t set course Calendar", new string[] {
                        "mock"});
#line 1122
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 1123
 testRunner.Given("Today is \'1/1/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1124
 testRunner.And("System have ClassCalendar collection with JSON format are", "[]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 1128
 testRunner.When("User set course schedule by set by JSON format is", "{\r\n\t\"UserProfileId\": \"sakul@mindsage.com\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"IsH" +
                    "oliday\": true,\r\n\t\"IsSaturday\": true,\r\n\t\"IsShift\": true\r\n}", ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1138
 testRunner.Then("System doesn\'t set course ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1139
 testRunner.And("System send null back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Set_Course_Schedule_By_SetFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Set_Course_Schedule_By_SetFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
