// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Show_Student_ListFeature : Xunit.IClassFixture<Show_Student_ListFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Show_Student_List.feature"
#line hidden
        
        public Show_Student_ListFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Show_Student_List", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""BeginDate"": ""2/1/2016"",
""ExpiredDate"": ""2/1/2017"",
        ""ClassRoomId"": ""ClassRoom01"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""LessonId"": ""Lesson01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""2/1/2016"",
            },
        ]
    },
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""sakul@mindsage.com"",
""Name"": ""Sakul"",
""ImageProfileUrl"": ""sakul.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""earn@mindsage.com"",
""Name"": ""Earn"",
""ImageProfileUrl"": ""earn.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription02"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""joker@mindsage.com"",
""Name"": ""Joker"",
""ImageProfileUrl"": ""joker.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription03"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""perawatt@mindsage.com"",
""Name"": ""Perawatt"",
""ImageProfileUrl"": ""perawatt.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription04"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""bank@mindsage.com"",
""Name"": ""Bank"",
""ImageProfileUrl"": ""bank.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription05"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("System have UserActivity collection with JSON format are", @"[
{
""id"": ""UserActivity01"",
""UserProfileId"": ""joker@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""LessonActivities"":
[
{
	""id"": ""LessonActivity01"",
	""LessonId"": ""Lesson01"",

	""TotalContentsAmount"": 1,
	""SawContentIds"": 
	[
		""Content01""
	],
	""CreatedCommentAmount"": 1,
	""ParticipationAmount"": 1
}
]
},
{
""id"": ""UserActivity02"",
""UserProfileId"": ""bank@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""LessonActivities"":
[
{
	""id"": ""LessonActivity02"",
	""LessonId"": ""Lesson01"",

	""TotalContentsAmount"": 1,
	""SawContentIds"": 
	[
		""Content01""
	],
	""CreatedCommentAmount"": 1,
	""ParticipationAmount"": 1
},
{
	""id"": ""LessonActivity03"",
	""LessonId"": ""Lesson01"",

	""TotalContentsAmount"": 1,
	""SawContentIds"": [],
	""CreatedCommentAmount"": 0,
	""ParticipationAmount"": 0
},
]
},
{
""id"": ""UserActivity03"",
""UserProfileId"": ""perawatt@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""LessonActivities"":
[
{
	""id"": ""LessonActivity04"",
	""LessonId"": ""Lesson01"",

	""TotalContentsAmount"": 1,
	""SawContentIds"": 
	[
		""Content01""
	],
	""CreatedCommentAmount"": 0,
	""ParticipationAmount"": 0
}
]
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Show_Student_ListFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show_Student_List")]
        [Xunit.TraitAttribute("Description", "Teacher request student list Then system send student list back")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void TeacherRequestStudentListThenSystemSendStudentListBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher request student list Then system send student list back", new string[] {
                        "mock"});
#line 180
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 181
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
    testRunner.When("UserProfile \'sakul@mindsage.com\' request student list from ClassRoom: \'ClassRoom0" +
                    "1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "id",
                        "Name",
                        "ImageUrl",
                        "CommentPercentage",
                        "OnlineExtrasPercentage",
                        "SocialParticipationPercentage"});
            table2.AddRow(new string[] {
                        "bank@mindsage.com",
                        "Bank",
                        "bank.jpg",
                        "50",
                        "50",
                        "50"});
            table2.AddRow(new string[] {
                        "earn@mindsage.com",
                        "Earn",
                        "earn.jpg",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "joker@mindsage.com",
                        "Joker",
                        "joker.jpg",
                        "100",
                        "100",
                        "100"});
            table2.AddRow(new string[] {
                        "perawatt@mindsage.com",
                        "Perawatt",
                        "perawatt.jpg",
                        "0",
                        "100",
                        "0"});
#line 183
    testRunner.Then("System send student list are", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Show_Student_ListFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Show_Student_ListFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
