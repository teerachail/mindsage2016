// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Add_New_Course_By_Teacher_CodeFeature : Xunit.IClassFixture<Add_New_Course_By_Teacher_CodeFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Add_New_Course_By_Teacher_Code.feature"
#line hidden
        
        public Add_New_Course_By_Teacher_CodeFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Add_New_Course_By_Teacher_Code", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.And("System have UserProfile collection with JSON format are", "[\r\n{\r\n\"id\": \"sakul@mindsage.com\",\r\n\"Name\": \"Sakul\",\r\n\"ImageProfileUrl\": \"sakul.jp" +
                    "g\",\r\n\"Subscriptions\": []\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016""
					}
				]
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("System have CourseCatalog collection with JSON format are", "[\r\n\t{\r\n\t\t\"id\": \"CourseCatalog01\",\r\n\t\t\"Grade\": 7,\r\n\t\t\"SideName\": \"COMPLETE 7th GRA" +
                    "DE COURSE\",\r\n\t\t\"CreatedDate\": \"1/1/2016\"\r\n\t}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("System have LessonCatalog collection with JSON format are", @"[
    {
        ""id"": ""LessonCatalog01"",
""Order"": 1,
""SemesterName"": ""A"",
""CourseCatalogId"": ""CourseCatalog01"",
        ""Title"": ""What Is Emotional Literacy?"",
        ""ShortTeacherLessonPlan"": ""short teacher lesson plan01"",
        ""FullTeacherLessonPlan"": ""full teacher lesson plan01"",
""PrimaryContentUrl"": ""PrimaryContent01"",
""ExtraContents"": [ 
{
	""id"": ""Extra01"",
	""ContentURL"": ""www.extracontent01.com"",
	""Description"": ""description01"",
	""IconURL"": ""extra01.jpg""
},
{
	""id"": ""Extra02"",
	""ContentURL"": ""www.extracontent02.com"",
	""Description"": ""description03"",
	""IconURL"": ""extra02.jpg""
},
{
	""id"": ""Extra03"",
	""ContentURL"": ""www.extracontent03.com"",
	""Description"": ""description03"",
	""IconURL"": ""extra03.jpg""
}
],
""TopicOfTheDays"": []
    },
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
    testRunner.And("System have StudentKey collection with JSON format are", "[\r\n\t{\r\n\t\t\"id\": \"StudentKey01\",\r\n\t\t\"Code\": \"StudentCode01\",\r\n\t\t\"Grade\": \"Grade01\"," +
                    "\r\n\t\t\"CourseCatalogId\": \"CourseCatalog01\",\r\n\t\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\t\"C" +
                    "reatedDate\": \"2/1/2016\",\r\n\t}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Add_New_Course_By_Teacher_CodeFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using the right teacher code Then system add new course to" +
            " the user\'s subscription")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingTheRightTeacherCodeThenSystemAddNewCourseToTheUserSSubscription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using the right teacher code Then system add new course to" +
                    " the user\'s subscription", new string[] {
                        "mock"});
#line 108
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 109
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 110
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 111
    testRunner.Then("System create new ClassRoom with JSON format is", @"{
	""Name"": ""COMPLETE 7th GRADE COURSE"",
	""CourseCatalogId"": ""CourseCatalog01"",
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LastUpdatedMessageDate"": ""2/8/2016 00:00 am"",
	""Lessons"": [
		{
			""id"": ""LessonCatalog01"",
			""LessonCatalogId"": ""LessonCatalog01"",
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.And("System create new ClassCalendar with JSON format is", @"{
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LessonCalendars"": [
		{
			""Order"": 1,
			""SemesterGroupName"": ""A"",
			""BeginDate"": ""2/8/2016 00:00 am"",
			""CreatedDate"": ""2/8/2016 00:00 am"",
			""LessonId"": ""LessonCatalog01"",
			""TopicOfTheDays"": []
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.And("System upsert user id \'sakul@mindsage.com\' UserActivity\'s LessonActivities collec" +
                    "tion with JSON format are", "[\r\n{\r\n\"LessonId\": \"LessonCatalog01\",\r\n\"TotalContentsAmount\": 4,\r\n\"SawContentIds\":" +
                    " [],\r\n\"CreatedCommentAmount\": 0,\r\n\"ParticipationAmount\": 0,\r\n\"BeginDate\": \"2/8/2" +
                    "016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.And("System add new teacher subscription for user id \'sakul@mindsage.com\' collection w" +
                    "ith JSON format are", "[\r\n{\r\n\"Role\": \"Teacher\",\r\n\"ClassRoomName\": \"COMPLETE 7th GRADE COURSE\",\r\n\"License" +
                    "Id\": \"License01\",\r\n\"CourseCatalogId\": \"CourseCatalog01\",\r\n\"CreatedDate\": \"2/8/20" +
                    "16 00:00 am\",\r\n\"LastActiveDate\": \"2/8/2016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 168
 testRunner.And("System create new StudentKey with JSON format is", "{\r\n\t\"Grade\": 7,\r\n\t\"CourseCatalogId\": \"CourseCatalog01\",\r\n\t\"CreatedDate\": \"2/8/201" +
                    "6 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using the right teacher code (more than one lessone) Then " +
            "system add new course to the user\'s subscription")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingTheRightTeacherCodeMoreThanOneLessoneThenSystemAddNewCourseToTheUserSSubscription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using the right teacher code (more than one lessone) Then " +
                    "system add new course to the user\'s subscription", new string[] {
                        "mock"});
#line 178
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 179
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 180
 testRunner.And("System have LessonCatalog collection with JSON format are", "[\r\n    {\r\n        \"id\": \"LessonCatalog01\",\r\n\"Order\": 1,\r\n\"SemesterName\": \"A\",\r\n\"C" +
                    "ourseCatalogId\": \"CourseCatalog01\",\r\n        \"Title\": \"What Is Emotional Literac" +
                    "y?\",\r\n        \"ShortTeacherLessonPlan\": \"short teacher lesson plan01\",\r\n        " +
                    "\"FullTeacherLessonPlan\": \"full teacher lesson plan01\",\r\n\"PrimaryContentUrl\": \"Pr" +
                    "imaryContent01\",\r\n\"ExtraContents\": [ \r\n{\r\n\t\"id\": \"Extra01\",\r\n\t\"ContentURL\": \"www" +
                    ".extracontent01.com\",\r\n\t\"Description\": \"description01\",\r\n\t\"IconURL\": \"extra01.jp" +
                    "g\"\r\n},\r\n{\r\n\t\"id\": \"Extra02\",\r\n\t\"ContentURL\": \"www.extracontent02.com\",\r\n\t\"Descri" +
                    "ption\": \"description03\",\r\n\t\"IconURL\": \"extra02.jpg\"\r\n},\r\n{\r\n\t\"id\": \"Extra03\",\r\n\t" +
                    "\"ContentURL\": \"www.extracontent03.com\",\r\n\t\"Description\": \"description03\",\r\n\t\"Ico" +
                    "nURL\": \"extra03.jpg\"\r\n}\r\n],\r\n\"TopicOfTheDays\": [\r\n{\r\n\t\"id\": \"TOTD01\",\r\n\t\"Message" +
                    "\": \"Message01\",\r\n\t\"SendOnDay\": 1,\r\n\t\"CreatedDate\": \"1/1/2016\"\r\n},\r\n{\r\n\t\"id\": \"TO" +
                    "TD02\",\r\n\t\"Message\": \"Message02\",\r\n\t\"SendOnDay\": 3,\r\n\t\"CreatedDate\": \"1/1/2016\"\r\n" +
                    "}\r\n]\r\n    },\r\n{\r\n        \"id\": \"LessonCatalog02\",\r\n\"Order\": 2,\r\n\"SemesterName\": " +
                    "\"A\",\r\n\"CourseCatalogId\": \"CourseCatalog01\",\r\n        \"Title\": \"Why should we lea" +
                    "rn?\",\r\n        \"ShortTeacherLessonPlan\": \"short teacher lesson plan02\",\r\n       " +
                    " \"FullTeacherLessonPlan\": \"full teacher lesson plan02\",\r\n\"PrimaryContentUrl\": \"P" +
                    "rimaryContent02\",\r\n\"ExtraContents\": [ \r\n{\r\n\t\"id\": \"Extra04\",\r\n\t\"ContentURL\": \"ww" +
                    "w.extracontent04.com\",\r\n\t\"Description\": \"description04\",\r\n\t\"IconURL\": \"extra04.j" +
                    "pg\"\r\n},\r\n{\r\n\t\"id\": \"Extra05\",\r\n\t\"ContentURL\": \"www.extracontent05.com\",\r\n\t\"Descr" +
                    "iption\": \"description05\",\r\n\t\"IconURL\": \"extra05.jpg\"\r\n},\r\n{\r\n\t\"id\": \"Extra06\",\r\n" +
                    "\t\"ContentURL\": \"www.extracontent06.com\",\r\n\t\"Description\": \"description06\",\r\n\t\"Ic" +
                    "onURL\": \"extra06.jpg\"\r\n}\r\n],\r\n\"TopicOfTheDays\": [\r\n{\r\n\t\"id\": \"TOTD03\",\r\n\t\"Messag" +
                    "e\": \"Message03\",\r\n\t\"SendOnDay\": 2,\r\n\t\"CreatedDate\": \"1/1/2016\"\r\n},\r\n{\r\n\t\"id\": \"T" +
                    "OTD04\",\r\n\t\"Message\": \"Message04\",\r\n\t\"SendOnDay\": 5,\r\n\t\"CreatedDate\": \"1/1/2016\"\r" +
                    "\n}\r\n]\r\n    },\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 274
    testRunner.Then("System create new ClassRoom with JSON format is", @"{
	""Name"": ""COMPLETE 7th GRADE COURSE"",
	""CourseCatalogId"": ""CourseCatalog01"",
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LastUpdatedMessageDate"": ""2/8/2016 00:00 am"",
	""Lessons"": [
		{
			""id"": ""LessonCatalog01"",
			""LessonCatalogId"": ""LessonCatalog01"",
		},
		{
			""id"": ""LessonCatalog02"",
			""LessonCatalogId"": ""LessonCatalog02"",
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 293
 testRunner.And("System create new ClassCalendar with JSON format is", @"{
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LessonCalendars"": [
		{
			""Order"": 1,
			""SemesterGroupName"": ""A"",
			""BeginDate"": ""2/8/2016 00:00 am"",
			""CreatedDate"": ""2/8/2016 00:00 am"",
			""LessonId"": ""LessonCatalog01"",
			""TopicOfTheDays"": [
				{
					""id"": ""TOTD01"",
					""Message"": ""Message01"",
					""SendOnDay"": 1,
					""CreatedDate"": ""2/8/2016 00:00 am""
				},
				{
					""id"": ""TOTD02"",
					""Message"": ""Message02"",
					""SendOnDay"": 3,
					""CreatedDate"": ""2/8/2016 00:00 am""
				}
			]
		},
		{
			""Order"": 2,
			""SemesterGroupName"": ""A"",
			""BeginDate"": ""2/8/2016 00:00 am"",
			""CreatedDate"": ""2/8/2016 00:00 am"",
			""LessonId"": ""LessonCatalog02"",
			""TopicOfTheDays"": [
				{
					""id"": ""TOTD03"",
					""Message"": ""Message03"",
					""SendOnDay"": 2,
					""CreatedDate"": ""2/8/2016 00:00 am""
				},
				{
					""id"": ""TOTD04"",
					""Message"": ""Message04"",
					""SendOnDay"": 5,
					""CreatedDate"": ""2/8/2016 00:00 am""
				}
			]
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 343
 testRunner.And("System upsert user id \'sakul@mindsage.com\' UserActivity\'s LessonActivities collec" +
                    "tion with JSON format are", @"[
{
""LessonId"": ""LessonCatalog01"",
""TotalContentsAmount"": 4,
""SawContentIds"": [],
""CreatedCommentAmount"": 0,
""ParticipationAmount"": 0,
""BeginDate"": ""2/8/2016 00:00 am"",
},
{
""LessonId"": ""LessonCatalog02"",
""TotalContentsAmount"": 4,
""SawContentIds"": [],
""CreatedCommentAmount"": 0,
""ParticipationAmount"": 0,
""BeginDate"": ""2/8/2016 00:00 am"",
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 364
 testRunner.And("System add new teacher subscription for user id \'sakul@mindsage.com\' collection w" +
                    "ith JSON format are", "[\r\n{\r\n\"Role\": \"Teacher\",\r\n\"ClassRoomName\": \"COMPLETE 7th GRADE COURSE\",\r\n\"License" +
                    "Id\": \"License01\",\r\n\"CourseCatalogId\": \"CourseCatalog01\",\r\n\"CreatedDate\": \"2/8/20" +
                    "16 00:00 am\",\r\n\"LastActiveDate\": \"2/8/2016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 377
 testRunner.And("System create new StudentKey with JSON format is", "{\r\n\t\"Grade\": 7,\r\n\t\"CourseCatalogId\": \"CourseCatalog01\",\r\n\t\"CreatedDate\": \"2/8/201" +
                    "6 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher code Then system doesn\'t add new" +
            " course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherCodeThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher code Then system doesn\'t add new" +
                    " course to the user", new string[] {
                        "mock"});
#line 387
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 388
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'Incorrec" +
                    "tCode\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 390
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 391
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 393
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher grade Then system doesn\'t add ne" +
            "w course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherGradeThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher grade Then system doesn\'t add ne" +
                    "w course to the user", new string[] {
                        "mock"});
#line 397
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 398
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 399
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'IncorrectGrade\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 400
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 401
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 403
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher code and grade Then system doesn" +
            "\'t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherCodeAndGradeThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher code and grade Then system doesn" +
                    "\'t add new course to the user", new string[] {
                        "mock"});
#line 407
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 408
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 409
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'Incorrec" +
                    "tCode\' and grade \'IncorrectGrade\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 410
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 411
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 413
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "Incorrect user add new course by using a correct teacher code Then system doesn\'t" +
            " add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserAddNewCourseByUsingACorrectTeacherCodeThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user add new course by using a correct teacher code Then system doesn\'t" +
                    " add new course to the user", new string[] {
                        "mock"});
#line 417
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 418
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 419
    testRunner.When("UserProfile \'unknow@mindsage.com\' Add new course by using teteacher code \'07CA951" +
                    "23U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 420
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 421
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 423
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher code (empty) Then system doesn\'t" +
            " add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherCodeEmptyThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher code (empty) Then system doesn\'t" +
                    " add new course to the user", new string[] {
                        "mock"});
#line 427
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 428
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 429
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'\' and gr" +
                    "ade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 430
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 431
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 433
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher grade (empty) Then system doesn\'" +
            "t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherGradeEmptyThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher grade (empty) Then system doesn\'" +
                    "t add new course to the user", new string[] {
                        "mock"});
#line 437
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 438
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 439
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 440
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 441
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 443
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher code and grade (empty) Then syst" +
            "em doesn\'t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherCodeAndGradeEmptyThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher code and grade (empty) Then syst" +
                    "em doesn\'t add new course to the user", new string[] {
                        "mock"});
#line 447
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 448
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 449
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'\' and gr" +
                    "ade \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 450
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 451
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 452
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 453
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "Incorrect user add new course by using a correct teacher code (empty) Then system" +
            " doesn\'t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserAddNewCourseByUsingACorrectTeacherCodeEmptyThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user add new course by using a correct teacher code (empty) Then system" +
                    " doesn\'t add new course to the user", new string[] {
                        "mock"});
#line 457
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 458
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 459
    testRunner.When("UserProfile \'\' Add new course by using teteacher code \'07CA95123U48PSchoolName\' a" +
                    "nd grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 460
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 461
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 463
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher code (null) Then system doesn\'t " +
            "add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherCodeNullThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher code (null) Then system doesn\'t " +
                    "add new course to the user", new string[] {
                        "mock"});
#line 467
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 468
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 469
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'NULL\' an" +
                    "d grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 470
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 471
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 473
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher grade (null) Then system doesn\'t" +
            " add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherGradeNullThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher grade (null) Then system doesn\'t" +
                    " add new course to the user", new string[] {
                        "mock"});
#line 477
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 478
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 479
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 480
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 481
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 483
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course by using a incorrect teacher code and grade (null) Then syste" +
            "m doesn\'t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseByUsingAIncorrectTeacherCodeAndGradeNullThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course by using a incorrect teacher code and grade (null) Then syste" +
                    "m doesn\'t add new course to the user", new string[] {
                        "mock"});
#line 487
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 488
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 489
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'NULL\' an" +
                    "d grade \'NULL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 490
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 491
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 493
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "Incorrect user add new course by using a correct teacher code (null) Then system " +
            "doesn\'t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void IncorrectUserAddNewCourseByUsingACorrectTeacherCodeNullThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect user add new course by using a correct teacher code (null) Then system " +
                    "doesn\'t add new course to the user", new string[] {
                        "mock"});
#line 497
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 498
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 499
    testRunner.When("UserProfile \'NULL\' Add new course by using teteacher code \'07CA95123U48PSchoolNam" +
                    "e\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 500
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 501
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 503
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course but contracts in system doens\'t existing Then system doesn\'t " +
            "add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseButContractsInSystemDoensTExistingThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course but contracts in system doens\'t existing Then system doesn\'t " +
                    "add new course to the user", new string[] {
                        "mock"});
#line 507
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 508
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 509
 testRunner.And("System have Contract collection with JSON format are", "[]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 513
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 514
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 515
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 516
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 517
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 518
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course but licenses in system doens\'t existing Then system doesn\'t a" +
            "dd new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseButLicensesInSystemDoensTExistingThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course but licenses in system doens\'t existing Then system doesn\'t a" +
                    "dd new course to the user", new string[] {
                        "mock"});
#line 522
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 523
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 524
 testRunner.And("System have Contract collection with JSON format are", "[\r\n\t{\r\n\t\t\"id\": \"Contract01\",\r\n\t\t\"SchoolName\": \"SchoolName01\",\r\n\t\t\"State\": \"CA\",\r\n" +
                    "\t\t\"ZipCode\": \"95123\",\r\n\t\t\"CreatedDate\": \"1/1/2016\",\r\n\t\t\"Licenses\": []\r\n\t}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 538
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 539
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 541
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course but TeacherKeys in system doens\'t existing Then system doesn\'" +
            "t add new course to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseButTeacherKeysInSystemDoensTExistingThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course but TeacherKeys in system doens\'t existing Then system doesn\'" +
                    "t add new course to the user", new string[] {
                        "mock"});
#line 545
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 546
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 547
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""TeacherKeys"": []
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 568
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 569
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 570
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 571
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 572
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course but the contract was deleted Then system doesn\'t add new cour" +
            "se to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseButTheContractWasDeletedThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course but the contract was deleted Then system doesn\'t add new cour" +
                    "se to the user", new string[] {
                        "mock"});
#line 575
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 576
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 577
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""DeletedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016""
					}
				]
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 606
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 607
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 609
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course but the license was deleted Then system doesn\'t add new cours" +
            "e to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseButTheLicenseWasDeletedThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course but the license was deleted Then system doesn\'t add new cours" +
                    "e to the user", new string[] {
                        "mock"});
#line 613
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 614
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 615
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""DeletedDate"": ""1/1/2016"",
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016""
					}
				]
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 643
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 644
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 645
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 646
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 647
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 648
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course but the TeacherKey was deleted Then system doesn\'t add new co" +
            "urse to the user")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseButTheTeacherKeyWasDeletedThenSystemDoesnTAddNewCourseToTheUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course but the TeacherKey was deleted Then system doesn\'t add new co" +
                    "urse to the user", new string[] {
                        "mock"});
#line 651
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 652
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 653
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016"",
						""DeletedDate"": ""1/1/2016"",
					}
				]
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 682
    testRunner.Then("System doesn\'t create new ClassRoom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 683
 testRunner.And("System doesn\'t create new ClassCalendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 684
 testRunner.Then("System doesn\'t add new subscription", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 685
 testRunner.And("System doesn\'t update UserActivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
 testRunner.And("System doesn\'t create new StudentKey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course all data correct (some licenses was deleted) Then system add " +
            "new course to the user\'s subscription")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseAllDataCorrectSomeLicensesWasDeletedThenSystemAddNewCourseToTheUserSSubscription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course all data correct (some licenses was deleted) Then system add " +
                    "new course to the user\'s subscription", new string[] {
                        "mock"});
#line 689
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 690
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 691
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""DeletedDate"": ""1/1/2016"",
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016""
					}
				]
			},
			{
				""id"": ""License02"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016""
					}
				]
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 732
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 733
    testRunner.Then("System create new ClassRoom with JSON format is", @"{
	""Name"": ""COMPLETE 7th GRADE COURSE"",
	""CourseCatalogId"": ""CourseCatalog01"",
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LastUpdatedMessageDate"": ""2/8/2016 00:00 am"",
	""Lessons"": [
		{
			""id"": ""LessonCatalog01"",
			""LessonCatalogId"": ""LessonCatalog01"",
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 748
 testRunner.And("System create new ClassCalendar with JSON format is", @"{
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LessonCalendars"": [
		{
			""Order"": 1,
			""SemesterGroupName"": ""A"",
			""BeginDate"": ""2/8/2016 00:00 am"",
			""CreatedDate"": ""2/8/2016 00:00 am"",
			""LessonId"": ""LessonCatalog01"",
			""TopicOfTheDays"": []
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 764
 testRunner.And("System upsert user id \'sakul@mindsage.com\' UserActivity\'s LessonActivities collec" +
                    "tion with JSON format are", "[\r\n{\r\n\"LessonId\": \"LessonCatalog01\",\r\n\"TotalContentsAmount\": 4,\r\n\"SawContentIds\":" +
                    " [],\r\n\"CreatedCommentAmount\": 0,\r\n\"ParticipationAmount\": 0,\r\n\"BeginDate\": \"2/8/2" +
                    "016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 777
 testRunner.And("System add new teacher subscription for user id \'sakul@mindsage.com\' collection w" +
                    "ith JSON format are", "[\r\n{\r\n\"Role\": \"Teacher\",\r\n\"ClassRoomName\": \"COMPLETE 7th GRADE COURSE\",\r\n\"License" +
                    "Id\": \"License02\",\r\n\"CourseCatalogId\": \"CourseCatalog01\",\r\n\"CreatedDate\": \"2/8/20" +
                    "16 00:00 am\",\r\n\"LastActiveDate\": \"2/8/2016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 790
 testRunner.And("System create new StudentKey with JSON format is", "{\r\n\t\"Grade\": 7,\r\n\t\"CourseCatalogId\": \"CourseCatalog01\",\r\n\t\"CreatedDate\": \"2/8/201" +
                    "6 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Add_New_Course_By_Teacher_Code")]
        [Xunit.TraitAttribute("Description", "User add new course all data correct (some teacheTeacherKey was deleted) Then sys" +
            "tem add new course to the user\'s subscription")]
        [Xunit.TraitAttribute("Category", "mock")]
        public virtual void UserAddNewCourseAllDataCorrectSomeTeacheTeacherKeyWasDeletedThenSystemAddNewCourseToTheUserSSubscription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User add new course all data correct (some teacheTeacherKey was deleted) Then sys" +
                    "tem add new course to the user\'s subscription", new string[] {
                        "mock"});
#line 800
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 801
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 802
 testRunner.And("System have Contract collection with JSON format are", @"[
	{
		""id"": ""Contract01"",
		""SchoolName"": ""SchoolName01"",
		""State"": ""CA"",
		""ZipCode"": ""95123"",
		""CreatedDate"": ""1/1/2016"",
		""Licenses"": [
			{
				""id"": ""License01"",
				""CourseCatalogId"": ""CourseCatalog01"",
				""Grade"": 7,
				""TeacherKeys"": [
					{
						""id"": ""TeacherKey01"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016"",
						""DeletedDate"": ""1/1/2016""
					},
					{
						""id"": ""TeacherKey02"",
						""Grade"": 7,
						""Code"": ""07CA95123U48PSchoolName"",
						""CreatedDate"": ""1/1/2016""
					}
				]
			}
		]
	}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 836
    testRunner.When("UserProfile \'sakul@mindsage.com\' Add new course by using teteacher code \'07CA9512" +
                    "3U48PSchoolName\' and grade \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 837
    testRunner.Then("System create new ClassRoom with JSON format is", @"{
	""Name"": ""COMPLETE 7th GRADE COURSE"",
	""CourseCatalogId"": ""CourseCatalog01"",
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LastUpdatedMessageDate"": ""2/8/2016 00:00 am"",
	""Lessons"": [
		{
			""id"": ""LessonCatalog01"",
			""LessonCatalogId"": ""LessonCatalog01"",
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 852
 testRunner.And("System create new ClassCalendar with JSON format is", @"{
	""CreatedDate"": ""2/8/2016 00:00 am"",
	""LessonCalendars"": [
		{
			""Order"": 1,
			""SemesterGroupName"": ""A"",
			""BeginDate"": ""2/8/2016 00:00 am"",
			""CreatedDate"": ""2/8/2016 00:00 am"",
			""LessonId"": ""LessonCatalog01"",
			""TopicOfTheDays"": []
		}
	]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 868
 testRunner.And("System upsert user id \'sakul@mindsage.com\' UserActivity\'s LessonActivities collec" +
                    "tion with JSON format are", "[\r\n{\r\n\"LessonId\": \"LessonCatalog01\",\r\n\"TotalContentsAmount\": 4,\r\n\"SawContentIds\":" +
                    " [],\r\n\"CreatedCommentAmount\": 0,\r\n\"ParticipationAmount\": 0,\r\n\"BeginDate\": \"2/8/2" +
                    "016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 881
 testRunner.And("System add new teacher subscription for user id \'sakul@mindsage.com\' collection w" +
                    "ith JSON format are", "[\r\n{\r\n\"Role\": \"Teacher\",\r\n\"ClassRoomName\": \"COMPLETE 7th GRADE COURSE\",\r\n\"License" +
                    "Id\": \"License01\",\r\n\"CourseCatalogId\": \"CourseCatalog01\",\r\n\"CreatedDate\": \"2/8/20" +
                    "16 00:00 am\",\r\n\"LastActiveDate\": \"2/8/2016 00:00 am\",\r\n}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 894
 testRunner.And("System create new StudentKey with JSON format is", "{\r\n\t\"Grade\": 7,\r\n\t\"CourseCatalogId\": \"CourseCatalog01\",\r\n\t\"CreatedDate\": \"2/8/201" +
                    "6 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Add_New_Course_By_Teacher_CodeFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Add_New_Course_By_Teacher_CodeFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
