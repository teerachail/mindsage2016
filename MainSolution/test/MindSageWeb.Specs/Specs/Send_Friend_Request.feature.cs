// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Send_Friend_RequestFeature : Xunit.IClassFixture<Send_Friend_RequestFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Send_Friend_Request.feature"
#line hidden
        
        public Send_Friend_RequestFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Send_Friend_Request", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
    testRunner.And("System have UserProfile collection with JSON format are", "[\r\n{\r\n\"id\": \"sakul@mindsage.com\",\r\n\"Name\": \"Sakul\",\r\n\"ImageProfileUrl\": \"sakul.jp" +
                    "g\",\r\n\"Subscriptions\": []\r\n},\r\n{\r\n\"id\": \"earn@mindsage.com\",\r\n\"Name\": \"Earn\",\r\n\"I" +
                    "mageProfileUrl\": \"earn.jpg\",\r\n\"Subscriptions\": []\r\n},\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Send_Friend_RequestFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Send_Friend_Request")]
        [Xunit.TraitAttribute("Description", "User send friend request Then system record the request")]
        public virtual void UserSendFriendRequestThenSystemRecordTheRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User send friend request Then system record the request", new string[] {
                        "mock"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 28
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 29
 testRunner.And("System have FriendRequest collection with JSON format are", "[]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
    testRunner.When("UserProfile \'sakul@mindsage.com\' send friend request to UserProfile \'earn@mindsag" +
                    "e.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
    testRunner.Then("System upsert FriendRequest with JSON format is", "{\r\n\"FromUserProfileId\": \"sakul@mindsage.com\",\r\n\"ToUserProfileId\": \"earn@mindsage." +
                    "com\",\r\n\"Status\": \"SendRequest\",\r\n\"CreatedDate\": \"2/8/2016 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And("System upsert FriendRequest with JSON format is", "{\r\n\"FromUserProfileId\": \"earn@mindsage.com\",\r\n\"ToUserProfileId\": \"sakul@mindsage." +
                    "com\",\r\n\"Status\": \"ReceiveRequest\",\r\n\"CreatedDate\": \"2/8/2016 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Send_Friend_Request")]
        [Xunit.TraitAttribute("Description", "User accept friend request Then system record there are friend")]
        public virtual void UserAcceptFriendRequestThenSystemRecordThereAreFriend()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User accept friend request Then system record there are friend", new string[] {
                        "mock"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 55
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 56
 testRunner.And("System have FriendRequest collection with JSON format are", @"[
{
""id"": ""FriendRequest01"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""earn@mindsage.com"",
""Status"": ""ReceiveRequest"",
""CreatedDate"": ""2/8/2016 00:00 am"",
},
{
""id"": ""FriendRequest02"",
""FromUserProfileId"": ""earn@mindsage.com"",
""ToUserProfileId"": ""sakul@mindsage.com"",
""Status"": ""SendRequest"",
""CreatedDate"": ""2/8/2016 00:00 am"",
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
    testRunner.When("UserProfile \'sakul@mindsage.com\' respond friend request to UserProfile \'earn@mind" +
                    "sage.com\' by RequestId \'FriendRequest01\' IsAccept \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 76
    testRunner.Then("System upsert FriendRequest with JSON format is", "{\r\n\"id\": \"FriendRequest01\",\r\n\"FromUserProfileId\": \"sakul@mindsage.com\",\r\n\"ToUserP" +
                    "rofileId\": \"earn@mindsage.com\",\r\n\"Status\": \"Friend\",\r\n\"AcceptedDate\": \"2/8/2016 " +
                    "00:00 am\",\r\n\"CreatedDate\": \"2/8/2016 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.And("System upsert FriendRequest with JSON format is", "{\r\n\"id\": \"FriendRequest02\",\r\n\"FromUserProfileId\": \"earn@mindsage.com\",\r\n\"ToUserPr" +
                    "ofileId\": \"sakul@mindsage.com\",\r\n\"Status\": \"Friend\",\r\n\"AcceptedDate\": \"2/8/2016 " +
                    "00:00 am\",\r\n\"CreatedDate\": \"2/8/2016 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Send_Friend_Request")]
        [Xunit.TraitAttribute("Description", "User reject friend request Then system record there aren\'t friend")]
        public virtual void UserRejectFriendRequestThenSystemRecordThereArenTFriend()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User reject friend request Then system record there aren\'t friend", new string[] {
                        "mock"});
#line 100
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 101
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 102
 testRunner.And("System have FriendRequest collection with JSON format are", @"[
{
""id"": ""FriendRequest01"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""earn@mindsage.com"",
""Status"": ""ReceiveRequest"",
""CreatedDate"": ""2/8/2016 00:00 am"",
},
{
""id"": ""FriendRequest02"",
""FromUserProfileId"": ""earn@mindsage.com"",
""ToUserProfileId"": ""sakul@mindsage.com"",
""Status"": ""SendRequest"",
""CreatedDate"": ""2/8/2016 00:00 am"",
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
    testRunner.When("UserProfile \'sakul@mindsage.com\' respond friend request to UserProfile \'earn@mind" +
                    "sage.com\' by RequestId \'FriendRequest01\' IsAccept \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 122
    testRunner.Then("System upsert FriendRequest with JSON format is", "{\r\n\"id\": \"FriendRequest01\",\r\n\"FromUserProfileId\": \"sakul@mindsage.com\",\r\n\"ToUserP" +
                    "rofileId\": \"earn@mindsage.com\",\r\n\"Status\": \"Unfriend\",\r\n\"CreatedDate\": \"2/8/2016" +
                    " 00:00 am\",\r\n\"DeletedDate\": \"2/8/2016 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.And("System upsert FriendRequest with JSON format is", "{\r\n\"id\": \"FriendRequest02\",\r\n\"FromUserProfileId\": \"earn@mindsage.com\",\r\n\"ToUserPr" +
                    "ofileId\": \"sakul@mindsage.com\",\r\n\"Status\": \"Unfriend\",\r\n\"CreatedDate\": \"2/8/2016" +
                    " 00:00 am\",\r\n\"DeletedDate\": \"2/8/2016 00:00 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Send_Friend_Request")]
        [Xunit.TraitAttribute("Description", "User send unfriend friend Then system record there aren\'t friend")]
        public virtual void UserSendUnfriendFriendThenSystemRecordThereArenTFriend()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User send unfriend friend Then system record there aren\'t friend", new string[] {
                        "mock"});
#line 146
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 147
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 148
 testRunner.And("System have FriendRequest collection with JSON format are", @"[
{
""id"": ""FriendRequest01"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""earn@mindsage.com"",
""Status"": ""Friend"",
""AcceptedDate"": ""2/8/2016 00:00 am"",
""CreatedDate"": ""2/8/2016 00:00 am"",
},
{
""id"": ""FriendRequest02"",
""FromUserProfileId"": ""earn@mindsage.com"",
""ToUserProfileId"": ""sakul@mindsage.com"",
""Status"": ""Friend"",
""AcceptedDate"": ""2/8/2016 00:00 am"",
""CreatedDate"": ""2/8/2016 00:00 am"",
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
    testRunner.When("UserProfile \'sakul@mindsage.com\' respond friend request to UserProfile \'earn@mind" +
                    "sage.com\' by RequestId \'FriendRequest01\' IsAccept \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 170
    testRunner.Then("System upsert FriendRequest with JSON format is", "{\r\n\"id\": \"FriendRequest01\",\r\n\"FromUserProfileId\": \"sakul@mindsage.com\",\r\n\"ToUserP" +
                    "rofileId\": \"earn@mindsage.com\",\r\n\"Status\": \"Unfriend\",\r\n\"AcceptedDate\": \"2/8/201" +
                    "6 00:00 am\",\r\n\"CreatedDate\": \"2/8/2016 00:00 am\",\r\n\"DeletedDate\": \"2/8/2016 00:0" +
                    "0 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 182
 testRunner.And("System upsert FriendRequest with JSON format is", "{\r\n\"id\": \"FriendRequest02\",\r\n\"FromUserProfileId\": \"earn@mindsage.com\",\r\n\"ToUserPr" +
                    "ofileId\": \"sakul@mindsage.com\",\r\n\"Status\": \"Unfriend\",\r\n\"AcceptedDate\": \"2/8/201" +
                    "6 00:00 am\",\r\n\"CreatedDate\": \"2/8/2016 00:00 am\",\r\n\"DeletedDate\": \"2/8/2016 00:0" +
                    "0 am\",\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Send_Friend_RequestFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Send_Friend_RequestFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
