// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Show_Friend_ListFeature : Xunit.IClassFixture<Show_Friend_ListFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Show_Friends_List.feature"
#line hidden
        
        public Show_Friend_ListFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Show_Friend_List", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""BeginDate"": ""2/1/2016"",
""ExpiredDate"": ""2/1/2017"",
        ""ClassRoomId"": ""ClassRoom01"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""LessonId"": ""Lesson01"",
                ""Order"": 1,
                ""SemesterGroupName"": ""A"",
                ""BeginDate"": ""2/1/2016"",
            },
        ]
    },
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""sakul@mindsage.com"",
""Name"": ""Sakul"",
""ImageProfileUrl"": ""sakul.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""earn@mindsage.com"",
""Name"": ""Earn"",
""ImageProfileUrl"": ""earn.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription02"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""joker@mindsage.com"",
""Name"": ""Joker"",
""ImageProfileUrl"": ""joker.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription03"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""perawatt@mindsage.com"",
""Name"": ""Perawatt"",
""ImageProfileUrl"": ""perawatt.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription04"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""bank@mindsage.com"",
""Name"": ""Bank"",
""ImageProfileUrl"": ""bank.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription05"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
    testRunner.And("System have FriendRequest collection with JSON format are", @"[
    {
        ""id"": ""FriendRequest01"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""earn@mindsage.com"",
""Status"": ""SendRequest"",
""CreatedDate"": ""2/1/2016"",
    },
{
        ""id"": ""FriendRequest02"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""joker@mindsage.com"",
""Status"": ""ReceiveRequest"",
""CreatedDate"": ""2/1/2016"",
    },
{
        ""id"": ""FriendRequest03"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""perawatt@mindsage.com"",
""Status"": ""Friend"",
""AcceptedDate"": ""2/1/2016"",
""CreatedDate"": ""2/1/2016"",
    },
{
        ""id"": ""FriendRequest04"",
""FromUserProfileId"": ""sakul@mindsage.com"",
""ToUserProfileId"": ""bank@mindsage.com"",
""Status"": ""Unfriend"",
""AcceptedDate"": ""2/1/2016"",
""CreatedDate"": ""2/1/2016"",
""DeletedDate"": ""2/1/2016"",
    },
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Show_Friend_ListFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Show_Friend_List")]
        [Xunit.TraitAttribute("Description", "User request friend list Then system send friend list back")]
        public virtual void UserRequestFriendListThenSystemSendFriendListBack()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User request friend list Then system send friend list back", new string[] {
                        "mock"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 143
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
    testRunner.When("UserProfile \'sakul@mindsage.com\' request friend list from ClassRoom: \'ClassRoom01" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 145
    testRunner.Then("System send friend list with JSON format are", @"[
{
""id"": ""bank@mindsage.com"",
""Name"": ""Bank"",
""ImageUrl"": ""bank.jpg"",
""Status"": ""Unfriend""
},
{
""id"": ""earn@mindsage.com"",
""Name"": ""Earn"",
""ImageUrl"": ""earn.jpg"",
""Status"": ""SendRequest""
},
{
""id"": ""joker@mindsage.com"",
""Name"": ""Joker"",
""ImageUrl"": ""joker.jpg"",
""Status"": ""ReceiveRequest""
},
{
""id"": ""perawatt@mindsage.com"",
""Name"": ""Perawatt"",
""ImageUrl"": ""perawatt.jpg"",
""Status"": ""Friend""
},
]", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Show_Friend_ListFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Show_Friend_ListFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
