// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class Teacher_Leave_CourseFeature : Xunit.IClassFixture<Teacher_Leave_CourseFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Teacher_Leave_Course.feature"
#line hidden
        
        public Teacher_Leave_CourseFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Teacher_Leave_Course", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("Initialize mocking data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.And("System have UserProfile collection with JSON format are", @"[
{
""id"": ""sakul@mindsage.com"",
""Name"": ""Sakul"",
""ImageProfileUrl"": ""sakul.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription01"",
	""Role"": ""Teacher"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
{
""id"": ""earn@mindsage.com"",
""Name"": ""Earn"",
""ImageProfileUrl"": ""earn.jpg"",
""Subscriptions"":
[
{
	""id"": ""Subscription02"",
	""Role"": ""Student"",
	""ClassRoomId"": ""ClassRoom01"",
	""ClassCalendarId"": ""ClassCalendar01"",
},
]
},
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("System have ClassRoom collection with JSON format are", @"[
    {
        ""id"": ""ClassRoom01"",
        ""Name"": ""Emotional literacy"",
        ""CourseCatalogId"": ""CourseCatalog01"",
        ""CreatedDate"": ""2/1/2016"",
        ""Message"": ""Don't forget to comment a lesson!"",
        ""Lessons"":
        [
            {
                ""id"": ""Lesson01"",
                ""TotalLikes"": 0,
                ""LessonCatalogId"": ""LessonCatalog01""
            },
        ]
    }
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
    testRunner.And("System have ClassCalendar collection with JSON format are", @"[
    {
        ""id"": ""ClassCalendar01"",
        ""BeginDate"": ""2/1/2016"",
        ""ClassRoomId"": ""ClassRoom01"",
        ""LessonCalendars"":
        [
            {
                ""Id"": ""LessonCalendar01"",
                ""LessonId"": ""Lesson01"",
                ""BeginDate"": ""2/1/2016"",
                ""LessonCatalogId"": ""LessonCatalog01""
            },
        ]
    },
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.And("System have UserActivity collection with JSON format are", @"[
{
""id"": ""UserActivity01"",
""UserProfileId"": ""sakul@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""LessonActivities"":
[
{
	""id"": ""LessonActivity01"",
	""LessonId"": ""Lesson01"",
	""TotalContentsAmount"": 1,
	""SawContentIds"": 
	[
		""Content01""
	],
	""CreatedCommentAmount"": 1,
	""ParticipationAmount"": 1
}
]
},
{
""id"": ""UserActivity02"",
""UserProfileId"": ""earn@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""LessonActivities"":
[
{
	""id"": ""LessonActivity02"",
	""LessonId"": ""Lesson01"",
	""TotalContentsAmount"": 1,
	""SawContentIds"": [],
	""CreatedCommentAmount"": 0,
	""ParticipationAmount"": 0
}
]
}
]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
 testRunner.And("System have StudentKey collection with JSON format are", "[\r\n\t{\r\n\t\t\"id\": \"StudentKey01\",\r\n\t\t\"Code\": \"StudentCode01\",\r\n\t\t\"CourseCatalogId\": " +
                    "\"CourseCatalog01\",\r\n\t\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\t\"CreatedDate\": \"2/1/2016\"" +
                    ",\r\n\t}\r\n]", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void SetFixture(Teacher_Leave_CourseFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Teacher_Leave_Course")]
        [Xunit.TraitAttribute("Description", "Teacher leave course Then system remove the course and their students\' subscripti" +
            "ons")]
        public virtual void TeacherLeaveCourseThenSystemRemoveTheCourseAndTheirStudentsSubscriptions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Teacher leave course Then system remove the course and their students\' subscripti" +
                    "ons", new string[] {
                        "mock"});
#line 134
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 135
    testRunner.Given("Today is \'2/8/2016 00:00 am\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
    testRunner.When("UserProfile \'sakul@mindsage.com\' leave class room \'ClassRoom01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 137
    testRunner.Then("System upsert UserProfile with JSON format is", @"{
""id"": ""sakul@mindsage.com"",
""Name"": ""Sakul"",
""ImageProfileUrl"": ""sakul.jpg"",
""Subscriptions"":
[
{
""id"": ""Subscription01"",
""Role"": ""Teacher"",
""ClassRoomId"": ""ClassRoom01"",
""ClassCalendarId"": ""ClassCalendar01"",
""DeletedDate"": ""2/8/2016 00:00 am""
},
]
}", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 155
 testRunner.And("System upsert UserProfile with JSON format is", @"{
""id"": ""earn@mindsage.com"",
""Name"": ""Earn"",
""ImageProfileUrl"": ""earn.jpg"",
""Subscriptions"":
[
{
""id"": ""Subscription02"",
""Role"": ""Student"",
""ClassRoomId"": ""ClassRoom01"",
""ClassCalendarId"": ""ClassCalendar01"",
""DeletedDate"": ""2/8/2016 00:00 am""
},
]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.And("System upsert ClassRoom with JSON format is", @"{
    ""id"": ""ClassRoom01"",
    ""Name"": ""Emotional literacy"",
    ""CourseCatalogId"": ""CourseCatalog01"",
    ""CreatedDate"": ""2/1/2016"",
    ""Message"": ""Don't forget to comment a lesson!"",
""DeletedDate"": ""2/8/2016 00:00 am"",
    ""Lessons"":
    [
        {
            ""id"": ""Lesson01"",
            ""TotalLikes"": 0,
            ""LessonCatalogId"": ""LessonCatalog01""
        },
    ]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 192
 testRunner.And("System upsert ClassCalendar with JSON format is", @"{
    ""id"": ""ClassCalendar01"",
    ""BeginDate"": ""2/1/2016"",
    ""ClassRoomId"": ""ClassRoom01"",
""DeletedDate"": ""2/8/2016 00:00 am"",
    ""LessonCalendars"":
    [
        {
            ""Id"": ""LessonCalendar01"",
            ""LessonId"": ""Lesson01"",
            ""BeginDate"": ""2/1/2016"",
            ""LessonCatalogId"": ""LessonCatalog01""
        },
    ]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 210
 testRunner.And("System upsert UserActivity with JSON format is", @"{
""id"": ""UserActivity01"",
""UserProfileId"": ""sakul@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""DeletedDate"": ""2/8/2016 00:00 am"",
""LessonActivities"":
[
{
""id"": ""LessonActivity01"",
""LessonId"": ""Lesson01"",
""TotalContentsAmount"": 1,
""SawContentIds"": 
[
	""Content01""
],
""CreatedCommentAmount"": 1,
""ParticipationAmount"": 1
}
]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 233
 testRunner.And("System upsert UserActivity with JSON format is", @"{
""id"": ""UserActivity02"",
""UserProfileId"": ""earn@mindsage.com"",
""ClassRoomId"": ""ClassRoom01"",
""DeletedDate"": ""2/8/2016 00:00 am"",
""LessonActivities"":
[
{
""id"": ""LessonActivity02"",
""LessonId"": ""Lesson01"",
""TotalContentsAmount"": 1,
""SawContentIds"": [],
""CreatedCommentAmount"": 0,
""ParticipationAmount"": 0
}
]
}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 253
 testRunner.And("System upsert StudentKey with JSON format is", "{\r\n\t\"id\": \"StudentKey01\",\r\n\t\"Code\": \"StudentCode01\",\r\n\t\"CourseCatalogId\": \"Course" +
                    "Catalog01\",\r\n\t\"ClassRoomId\": \"ClassRoom01\",\r\n\t\"CreatedDate\": \"2/1/2016\",\r\n\t\"Dele" +
                    "tedDate\": \"2/8/2016 00:00 am\"\r\n}", ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                Teacher_Leave_CourseFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                Teacher_Leave_CourseFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
